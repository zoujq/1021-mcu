C51 COMPILER V9.56.0.0   FUN_HANDLE                                                        08/12/2020 17:39:38 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE FUN_HANDLE
OBJECT MODULE PLACED IN .\Output\Fun_Handle.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\Application\Fun_Handle\Fun_Handle.c OMF2 OPTIMIZE(8,SPEED) BROWSE INC
                    -DIR(..\..\Application;..\..\User\INC;..\..\Libraries) DEBUG PRINT(.\List\Fun_Handle.lst) TABS(2) OBJECT(.\Output\Fun_Han
                    -dle.obj)

line level    source

   1          /******************* (C) COPYRIGHT 2009~2019 holychip **************************
   2          * File Name          : Fun_Handle.c
   3          * Author             : Touch Team
   4          * Version            : V1.0.5.0
   5          * Date               : 2019/10/01
   6          ********************************************************************************
   7          
   8          
   9          *******************************************************************************/
  10          #include "HC89F303B.h"
  11          #include "Fun_Handle\Fun_Handle.h"
  12          #include "TIMER\TIMER.h"
  13          #include "HC89F30xB_GeneralKey_Touch_Lib_V1.04\HC89F30xB_GeneralKey_Touch_Lib.h"
  14          #include "WDT\WDT.h"
  15          #include "HC89F30xB_SYS.h"
  16          #include <intrins.h>
  17          #include "HC_Delay.h"
  18          
  19          //===============================================================================
  20          ux8 MCU_WORK_MODE = MCU_WORK_NORMAL;
  21          
  22          
  23          //===============================================================================
  24          extern uc8    CODE_OPENED_TK_AMOUNT;
  25          extern ux8  XDATA_TouchCnt[];
  26          
  27          //===============================================================================
  28          
  29          #define T_MCU_GO_TO_LP_MODE_DF    5  //µ•Œª(s) …Ë÷√MCU’˝≥£ƒ£ Ωœ¬£¨Œﬁ¥•√˛∂‡≥§ ±º‰∫Û‘ –ÌΩ¯»ÎµÕπ¶∫ƒƒ£ Ω
  30          
  31          //===============================================================================
  32          void Fun_Handle()
  33          {
  34   1        if(T0_100MS_F)
  35   1        {
  36   2          T0_100MS_F = 0;
  37   2      
  38   2          if((TouchKeyFlag == 0)&&(MCU_WORK_MODE==MCU_WORK_NORMAL))
  39   2          {
  40   3            //Œﬁ¥•√˛«“≥¨ ±∫Û£¨œµÕ≥‘ –Ì¥”’˝≥£ƒ£ ΩΩ¯»ÎµÕπ¶∫ƒƒ£ Ω
  41   3            //”√ªßø…“‘∏˘æ› µº –Ë«Û‘ˆº”‘ –ÌΩ¯»ÎµÕπ¶∫ƒƒ£ Ωµƒœ‡πÿÃıº˛£¨»ÁÕ®≥£–Ë“™Ω¯»ÎµÕπ¶∫ƒ «œµÕ≥πÿª˙∫Û£¨‘Úø…‘ˆº” «∑ÒŒ
             -™πÿª˙◊¥Ã¨œ‡”¶Ãıº˛
  42   3            if(++T_MCU_GO_TO_LP_MODE_COUNT >= (T_MCU_GO_TO_LP_MODE_DF * 1000 / 100))
  43   3            {
  44   4              T_MCU_GO_TO_LP_MODE_COUNT = 0;
  45   4              MCU_WORK_MODE = MCU_WORK_PD; //œµÕ≥‘ –Ì
  46   4            }
  47   3          }
  48   2          else
  49   2          {
  50   3            T_MCU_GO_TO_LP_MODE_COUNT = 0;
  51   3          }
  52   2        }
C51 COMPILER V9.56.0.0   FUN_HANDLE                                                        08/12/2020 17:39:38 PAGE 2   

  53   1      }
  54          
  55          //===============================================================================
  56          void MCU_WORK_MODE_SEL(void)
  57          {
  58   1        if(MCU_WORK_MODE == MCU_WORK_PD)
  59   1        {
  60   2          MCU_GO_TO_POWER_DOWN();
  61   2        }
  62   1        else if(MCU_WORK_MODE == MCU_WORK_IDLE)
  63   1        {
  64   2          MCU_GO_TO_IDLE();
  65   2        }
  66   1        else
  67   1        {
  68   2          ;
  69   2        }
  70   1      }
  71          
  72          //===============================================================================
  73          extern void un_init_work();
  74          void MCU_GO_TO_POWER_DOWN(void)
  75          {
  76   1      #if 1
  77   1        u8 i = 0;
  78   1      
  79   1        //OFF CTK
  80   1        Scan_Pause();
  81   1        CTKCON = 0;
  82   1        TouchKeyFlag = 0;
  83   1        for(i = 0; i < CODE_OPENED_TK_AMOUNT; i++)
  84   1        {
  85   2          XDATA_TouchCnt[i] = 0;
  86   2        }
  87   1      
  88   1        //OFF BOR
  89   1        BORC &= ~bmBOREN;
  90   1      
  91   1        //OFF TIMER0
  92   1        TIMER0_DIS;
  93   1        TIMER0_COUNT_INIT;
  94   1      
  95   1        //œ¬∑Ωø…‘ˆº”∆‰À¸Ω¯»ÎµÕπ¶∫ƒƒ£ Ω«∞–Ë“™πÿ±’µƒ≤Ÿ◊˜
  96   1      
  97   1      
  98   1        un_init_work();
  99   1      
 100   1      
 101   1      
 102   1        //SET WDT WAKE UP MODE and EA&EWDT must set "1"
 103   1        WDT_INIT();
 104   1      
 105   1        // MCU GO f POWER DOWN
 106   1        PCON |= bmPD;
 107   1        _nop_();
 108   1        _nop_();
 109   1        _nop_();
 110   1        _nop_();
 111   1      
 112   1        //ON BOR
 113   1        BORC |= bmBOREN;
 114   1      
C51 COMPILER V9.56.0.0   FUN_HANDLE                                                        08/12/2020 17:39:38 PAGE 3   

 115   1        //ON CTK
 116   1        CTKCON |= bmCTKON;
 117   1        Delay_us(1);
 118   1        CTKCON |= bmCTKST;
 119   1      
 120   1        Scan_Continue();
 121   1      
 122   1        MCU_WORK_MODE = MCU_WORK_IDLE; //
 123   1      #endif
 124   1      }
 125          
 126          //===============================================================================
 127          void MCU_GO_TO_IDLE(void)
 128          {
 129   1      #if 1
 130   1        // MCU GO TO IDLE
 131   1        PCON |= bmIDL;
 132   1        _nop_();
 133   1        _nop_();
 134   1        _nop_();
 135   1        _nop_();
 136   1      #endif
 137   1      }
 138          
 139          /*********************************END OF FILE************************************/
 140          /******************* (C) COPYRIGHT 2009~2019 holychip ***************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    172    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
